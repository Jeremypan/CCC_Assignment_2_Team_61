#Setting Up CouchDB Cluster

#docker run couchdb:3.0.0
- name: pull couchdb couchdb_image
  become: yes
  docker_image:
    name: '{{ couchdb_image }}'
    source: pull

################Docker Debug######################

# - name: Get infos on container
#   become: yes
#   docker_container_info:
#     name: couchdb3{{ ansible_default_ipv4.address }}
#   register: container_result

# - name: Does container exist?
#   debug:
#     msg: "The container {{ 'exists' if container_result.exists else 'does not exist' }}"

# - name: stop_data_container
#   become: yes
#   docker_container:
#     name: couchdb{{ item }}
#     state: stopped
#   when: container_result

# - name: remove_data_container
#   become: yes
#   docker_container:
#     name: couchdb{{ item }}
#     state: absent
#   when: container_result

- name: Create couchdb container
  become: yes
  docker_container:
    name: couchdb3{{ ansible_default_ipv4.address }}
    image: '{{ couchdb_image }}'
    state: started
    env:
      COUCHDB_USER: '{{ couchdb_user }}'
      COUCHDB_PASSWORD: '{{ couchdb_pass }}'
      COUCHDB_SECRET: '{{ couchdb_cookie }}'
      ERL_FLAGS: '-setcookie {{ couchdb_cookie }} -name couchdb@{{ ansible_default_ipv4.address }}'
    ports:
      - "5984:5984"
      - "9100-9200:9100-9200"
      - "4369:4369"

- set_fact:
    ip_address_list: '{{ node_ips.split(",") }}'
    cacheable: yes

- set_fact:
    master_node: '{{ ip_address_list[0] }}'
    cacheable: yes

- name: check_facts_of_master_node
  debug:
    msg: '{{ master_node }}'

- name: test_condition
  debug:
    msg: 'worker_ node: {{ inventory_hostname }}'
  when: not ansible_default_ipv4.address  == master_node

- name: enable the Cluster
  become: yes
  uri:
    url: "http://{{ master_node }}:5984/_cluster_setup"
    method: POST
    user: '{{ couchdb_user }}'
    password: '{{ couchdb_pass }}'
    status_code: 201
    headers:
      Content-Type: "application/json"
    body_format: json
    body: '{ "action": "enable_cluster", "bind_address": "0.0.0.0", "username": {{ couchdb_user }}, "password": {{ couchdb_pass }}, "port": "5984", "remote_node": {{ ansible_default_ipv4.address }}, "node_count": {{ couchdb_node_number }}, "remote_current_user": {{ couchdb_user }}, "remote_current_password": {{ couchdb_pass }} }'
  when: not ansible_default_ipv4.address  == master_node

- name: add nodes to the cluster
  become: yes
  uri:
    url: "http://{{ master_node }}:5984/_cluster_setup"
    method: POST
    user: '{{ couchdb_user }}'
    password: '{{ couchdb_pass }}'
    status_code: 201, 409
    headers:
      Content-Type: "application/json"
    force_basic_auth: yes
    body_format: json
    body: '{"action":"add node", "username" : {{ couchdb_user }}, "password" : {{ couchdb_pass }}, "host": {{ inventory_hostname }}, "port": "5984" }'
  when: not ansible_default_ipv4.address  == master_node

- name: finish cluster 1st step
  become: yes
  uri:
    url: "http://{{ master_node }}:5984/"
    method: GET
    user: '{{ couchdb_user }}'
    password: '{{ couchdb_pass }}'

- name: finish cluster 2nd step
  become: yes
  uri:
    url: "http://{{ master_node }}:5984/_cluster_setup"
    method: POST
    user: '{{ couchdb_user }}'
    password: '{{ couchdb_pass }}'
    status_code: 201
    headers:
      Content-Type: "application/json"
    body_format: json
    body: '{"action": "finish_cluster"}'

- name: Check whether the cluster configuration is correct
  uri:
    url: "http://{{ inventory_hostname }}:5984/_membership"
    method: GET
    user: '{{ couchdb_user }}'
    password: '{{ couchdb_pass }}'
  register: results

- name: check_configuration_result 
  debug:
    msg: '{{ results }}'

     



    



# - name: Config Cluster
#   become: yes
#   template: 
#     src: host_ip.j2
#     owner: ubuntu
#     group: ubuntu
#     dest: '/home/ubuntu/ip.conf'








# - name: config couchdb through commands
#   become: yes
#   command: '{{ item }}'
#   with_items:
#     - docker exec couchdb bash -c "echo \"-setcookie couchdbcluster\" >> /opt/couchdb/etc/vm.args"
#     - docker exec couchdb bash -c "echo \"-name couchdb@{{ ansible_default_ipv4.address }}\" >> /opt/couchdb/etc/vm.args"
#     - docker exec couchdb bash -c "echo \"-kernel inet_dist_listen_min 9100\" >> /opt/couchdb/etc/vm.args"
#     - docker exec couchdb bash -c "echo \"-kernel inet_dist_listen_max 9200\" >> /opt/couchdb/etc/vm.args" 
#     - docker restart couchdb
  
# - name: Pause for 30s to wait for container restart
#   pause:
#     seconds: 20

# - debug:
#     msg: '{{ item }}'
#   loop: '{{ CCC_Assignment_2 }}'
